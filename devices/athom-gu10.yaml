globals:
  - id: fast_boot
    type: int
    restore_value: yes
    initial_value: '0'

packages:
  <<: !include_dir_named ../components/common
  wifi: !include ../components/hardware/wifi.yaml

esphome:
  name: "${device_name}"
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: false
  project:
    name: "${project_name}"
    version: "${project_version}"
  on_boot:
    then:
      - script.execute: fast_boot_script

esp8266:
  board: esp8285
  restore_from_flash: true

preferences:
  flash_write_interval: 60min

mdns:
  disabled: false

captive_portal:

dashboard_import:
  package_import_url: github://athom-tech/athom-configs/athom-rgbww-light.yaml

binary_sensor:
  - platform: status
    name: "Status"

sensor:
  - platform: uptime
    name: "Uptime Sensor"

  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

button:
  - platform: factory_reset
    name: "Reset"
    id: Reset

  - platform: safe_mode
    name: "Safe Mode"
    internal: false

output:
  - platform: esp8266_pwm
    id: red_output
    pin: GPIO4
    min_power: 0.000499
    max_power: 1
  - platform: esp8266_pwm
    id: green_output
    pin: GPIO12
    min_power: 0.000499
    max_power: 1
  - platform: esp8266_pwm
    id: blue_output
    pin: GPIO14
    min_power: 0.000499
    max_power: 1
  - platform: esp8266_pwm
    id: warm_white_output
    pin: GPIO13
    min_power: 0.000499
    max_power: 1
  - platform: esp8266_pwm
    id: white_output
    pin: GPIO5
    min_power: 0.000499
    max_power: 1


light:
  - platform: rgbww
    id: rgbww_light
    name: "RGBCW_Bulb"
    restore_mode: ${light_restore_mode}
    red: red_output
    green: green_output
    blue: blue_output
    warm_white: warm_white_output
    cold_white: white_output
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2000 K
    color_interlock: ${color_interlock}

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
    ssid:
      name: "Connected SSID"
    mac_address:
      name: "Mac Address"

script:
  - id: fast_boot_script
    then:
      - if:
          condition:
            lambda: return ( id(fast_boot) >= 3 );
          then:
            - lambda: |-
                ESP_LOGD("athom-rgbww-light.yaml", "Now the counter is greater than or equal to 3, perform reset device and reboot");
                id(fast_boot) = 0;
                fast_boot->loop();
                global_preferences->sync();
                auto call = id(rgbww_light).turn_on();
                call.set_transition_length(500);
                call.set_brightness(1.0);
                call.set_color_mode(ColorMode::RGB);
                call.set_rgb(0.0, 0.0, 1.0);
                call.perform();
            - delay: 5s
            - button.press: Reset
      - lambda: |-
          id(fast_boot) += 1;
          fast_boot->loop();
          global_preferences->sync();
          ESP_LOGD("athom-rgbww-light.yaml", "Now the counter is %d.  Reset the device when the counter is greater than or equal to 3", id(fast_boot));
      - delay: 10s
      - lambda: |-
          ESP_LOGD("athom-rgbww-light.yaml", "Reset counter");
          id(fast_boot) = 0;
          fast_boot->loop();
          global_preferences->sync();
